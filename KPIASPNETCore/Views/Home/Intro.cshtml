
@{
    ViewData["Title"] = "Intro";
}

<style lang="scss">
    .dropbox {
        outline: 2px dashed grey; /* the dash box */
        outline-offset: -10px;
        background: lightcyan;
        color: dimgray;
        padding: 10px 10px;
        min-height: 200px; /* minimum height */
        position: relative;
        cursor: pointer;
    }

    .input-file {
        opacity: 0; /* invisible but it's there! */
        width: 100%;
        height: 200px;
        position: absolute;
        cursor: pointer;
    }

    .dropbox:hover {
        background: lightblue; /* when mouse over to the drop zone, change color */
    }

    .dropbox p {
        font-size: 1.2em;
        text-align: center;
        padding: 50px 0;
    }
</style>

<h1>Intro</h1>

<div id="app">
    <p>{{ name ? 'Welcome ' + name: 'Name yourself' }}</p>
    <div v-if="topictures">
        <div class="container">
            <form method="post" enctype="multipart/form-data" novalidate v-if="isInitial || isSaving">
                <h1>Upload images</h1>
                <div class="dropbox">
                    <input type="file" name="files" multiple class="input-file" v-on:change="filesChanged" v-bind:disable="isSaving" accept="image/*">
                    <p v-if="isInitial">
                        Drag your file(s) here to begin<br> or click to browse
                    </p>
                    <p v-if="isSaving">
                        Uploading files...
                    </p>
                </div>
            </form>
        </div>
        <ul id="example-1">
            <li v-for="item in items">
                {{ item.message }}
            </li>
        </ul>
        <ul>
            <li>
                {{ images }}
            </li>
        </ul>
        <div>{{ info }}</div>
    </div>
    <div v-else>
        <input placeholder="Enter your name" v-model="prename" v-on:keyup.enter="submitname">
    </div>
</div>

<script>
    var app = new Vue({
        el: '#app',
        data: {
            items: [
                { message: 'Foo' },
                { message: 'Bar' }
            ],
            name: null,
            prename: null,
            topictures: false,
            isInitial: true,
            isSaving: false,
            filesnum: 0,
            info: 'testinfo',
            images: '',
        },
        updated() {
            if (topictures) {
                getimages(this.images);
                //alert(this.info);
            }
        },
        methods: {
            submitname() {
                if (this.prename != null) {
                    this.name = this.prename;
                    this.topictures = true;
                    getimages(this.images);
                    //alert(this.info);
                }
                else {
                    this.topictures = false;
                }
            },
            save(formData) {
                // upload data to the server
                upload(formData)
                    .then(x => {
                        //this.uploadedFiles = [].concat(x);
                        //this.currentStatus = STATUS_SUCCESS;
                        alert('Uploaded ' + this.filesnum + ' file(s).');
                        this.isInitial = true;
                        this.isSaving = false;
                        getimages(this.images);
                        //alert(this.info);
                    })
                    .catch(err => {
                        //this.uploadError = err.response;
                        //this.currentStatus = STATUS_FAILED;
                        alert(err);
                        this.isInitial = true;
                        this.isSaving = false;
                    });
            },
            filesChanged: function (event) {
                this.isInitial = false;
                this.isSaving = true;
                var fieldName = event.target.name;
                var files = event.target.files;
                this.filesnum = event.target.files.length;
                const formData = new FormData();

                if (files.length > 0) {
                    Array
                        .from(Array(files.length).keys())
                        .map(x => {
                            if (files[x].type.includes("image")) {
                                formData.append("files", files[x]);
                            }
                        });

                    // save it
                    var numfiles = 0;
                    for (var key of formData.keys()) {
                        numfiles++;
                    }
                    if (numfiles > 0) {
                        this.save(formData);
                    }
                    else {
                        alert('Not image file(s).');
                        this.isInitial = true;
                        this.isSaving = false;
                    }
                }
            },
        },
    });

    //const BASE_URL = 'https://localhost:44361/';

    function upload(formData) {
        //const url = "${BASE_URL}/Home/Uploadfile";
        return axios.post("https://localhost:44361/api/FileUpload/Uploadfile", formData);
        // get data
        //.then(x => x.data)
        // add url field
        //.then(x => x.map(img => Object.assign({}, img, { url: `${BASE_URL}/images/${img.id}` })));
    }

    function getimages(images) {

        axios.get('https://localhost:44361/api/FileUpload/GetImages')
            .then(response => { images = response.data; alert(images); });
    }

    //this.$http.get('https://localhost:44361/api/FileUpload/GetImages')
        //    .then(response => {
        //    this.info = response.data.map((row) => {
        //        return { 'src': row }
        //    });
        //});

</script>